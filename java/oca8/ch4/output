void task(int m, int... n) { System.out.println(n.length); }
public static void main(String... args) { task(1); }
---
0

***
void task(int m, int... n) { System.out.println(n.length); }
public static void main(String... args) { task(1, null); }
---
null pointer exception

***
void task(int m, int... n) { System.out.println(n.length); }
public static void main(String... args) { task(1, null, null); }
---
method varargs3 cannot be applied to types int,<null>,<null>

***
void task(int m, int... n) { System.out.println(n.length); }
public static void main(String... args) { task(1, null, null); }
---
2

***
public class Model {
  static public int n = 10;
  public static void main(String args[]) {
    Model.n = 20;
    Model m = new Model();
    m.n = 30;
    m = null;
    m.n = 40;
    System.out.println(Model.n);
  }
}
---
40

***
1 : public class Model {
2 :   private static final int C;
3 :   public static void main(String... args) {
4 :     C = 1;
5 :   }
6 : }
---
no, line 4 cannot assign a value to final variable C

***
 1 : public class Model {
 2 :   private static final int C;
 3 :   public void m() {
 4 :     C = 1;
 5 :   }
 6 :   public static void main(String... args) {
 7 :     new Model().m();
 8 :   }
 9 : }
---
no, line 4 cannot assign a value to final variable C

***
public class Main {
  public static int incr(int n) {
    return ++n;
  }
  public static void main(String... args) {
    int n = 1;
    incr(n);
    System.out.println(n);
  }
}
---
1

***
public class Main {
  public static int incr(int n) {
    return ++n;
  }
  public static void main(String... args) {
    int n = 1;
    n = incr(n);
    System.out.println(n);
  }
}
---
2

***
public class Main {
    static int L = 2;
    static int W = 3;
    static int H = 4;
    static int V;
    { V = L * W * H; }
    public static void main(String[] args) {
        System.out.println("V = " + V);
    }
}
---
V = 0

***
public class Main {
    static int L = 2;
    static int W = 3;
    static int H = 4;
    static { V = L * W * H; }
    static int V;
    public static void main(String[] args) {
        System.out.println("V = " + V);
    }
}
---
V = 24

***
public class Main {
    static { V = L * W * H; }
    static int L = 2;
    static int W = 3;
    static int H = 4;
    static int V;
    public static void main(String[] args) {
        System.out.println("V = " + V);
    }
}
---
no, forward reference to L, W, and H are illegal

***
class Car {
    { System.out.println("initializing instance " + count); }
    float r, g, b;
    { r = g = b = 1f; }
    public String toString() {
        return "(" + r + "," + g + "," + b + ")";
    }
    Car(float r, float g, float b) {
        System.out.println("constructing car " + count);
        System.out.println(this);
        this.r = r;
        this.g = g;
        this.b = b;
        System.out.println(this);
        System.out.println("done constructing car " + count);
        count++;
    }

    static int count = 0;
    static { System.out.println(count + " cars created"); }

    public static void main(String... a) {
        System.out.println("Starting main program...");
        Car c1 = new Car(3, 2, 1);
        Car c2 = new Car(7, 6, 5);
    }
    { System.out.println("no more initializers for car " + count); }
    static { System.out.println("no more static initializers"); }
}
---
0 cars created
no more static initializers
Starting main program...
initializing instance 0
no more initializers for car 0
constructing car 0
(1.0,1.0,1.0)
(3.0,2.0,1.0)
done constructing car 0
initializing instance 1
no more initializers for car 1
constructing car 1
(1.0,1.0,1.0)
(7.0,6.0,5.0)
done constructing car 1

***